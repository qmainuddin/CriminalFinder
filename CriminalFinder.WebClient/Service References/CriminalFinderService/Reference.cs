//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CriminalFinder.WebClient.CriminalFinderService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriminalServiceResponse", Namespace="http://schemas.datacontract.org/2004/07/CriminalFinder.WebService")]
    [System.SerializableAttribute()]
    public partial class CriminalServiceResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminalsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool operationStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceErrorMsg {
            get {
                return this.ServiceErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceErrorMsgField, value) != true)) {
                    this.ServiceErrorMsgField = value;
                    this.RaisePropertyChanged("ServiceErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminals {
            get {
                return this.criminalsField;
            }
            set {
                if ((object.ReferenceEquals(this.criminalsField, value) != true)) {
                    this.criminalsField = value;
                    this.RaisePropertyChanged("criminals");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool operationStatus {
            get {
                return this.operationStatusField;
            }
            set {
                if ((this.operationStatusField.Equals(value) != true)) {
                    this.operationStatusField = value;
                    this.RaisePropertyChanged("operationStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriminalInfo", Namespace="http://schemas.datacontract.org/2004/07/CriminalFinder.BusinessLayer")]
    [System.SerializableAttribute()]
    public partial class CriminalInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float WeightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CriminalSearchCriteria", Namespace="http://schemas.datacontract.org/2004/07/CriminalFinder.BusinessLayer")]
    [System.SerializableAttribute()]
    public partial class CriminalSearchCriteria : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MaxWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinAgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinHeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float MinWeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxAge {
            get {
                return this.MaxAgeField;
            }
            set {
                if ((this.MaxAgeField.Equals(value) != true)) {
                    this.MaxAgeField = value;
                    this.RaisePropertyChanged("MaxAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxHeight {
            get {
                return this.MaxHeightField;
            }
            set {
                if ((this.MaxHeightField.Equals(value) != true)) {
                    this.MaxHeightField = value;
                    this.RaisePropertyChanged("MaxHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MaxWeight {
            get {
                return this.MaxWeightField;
            }
            set {
                if ((this.MaxWeightField.Equals(value) != true)) {
                    this.MaxWeightField = value;
                    this.RaisePropertyChanged("MaxWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinAge {
            get {
                return this.MinAgeField;
            }
            set {
                if ((this.MinAgeField.Equals(value) != true)) {
                    this.MinAgeField = value;
                    this.RaisePropertyChanged("MinAge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinHeight {
            get {
                return this.MinHeightField;
            }
            set {
                if ((this.MinHeightField.Equals(value) != true)) {
                    this.MinHeightField = value;
                    this.RaisePropertyChanged("MinHeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float MinWeight {
            get {
                return this.MinWeightField;
            }
            set {
                if ((this.MinWeightField.Equals(value) != true)) {
                    this.MinWeightField = value;
                    this.RaisePropertyChanged("MinWeight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CriminalFinderService.ICriminalService")]
    public interface ICriminalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/GetCriminals", ReplyAction="http://tempuri.org/ICriminalService/GetCriminalsResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse GetCriminals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/GetCriminals", ReplyAction="http://tempuri.org/ICriminalService/GetCriminalsResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> GetCriminalsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/SearchCriminals", ReplyAction="http://tempuri.org/ICriminalService/SearchCriminalsResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse SearchCriminals(CriminalFinder.WebClient.CriminalFinderService.CriminalSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/SearchCriminals", ReplyAction="http://tempuri.org/ICriminalService/SearchCriminalsResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> SearchCriminalsAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalSearchCriteria searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/GetCriminal", ReplyAction="http://tempuri.org/ICriminalService/GetCriminalResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse GetCriminal(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/GetCriminal", ReplyAction="http://tempuri.org/ICriminalService/GetCriminalResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> GetCriminalAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/UpdateCriminal", ReplyAction="http://tempuri.org/ICriminalService/UpdateCriminalResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse UpdateCriminal(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/UpdateCriminal", ReplyAction="http://tempuri.org/ICriminalService/UpdateCriminalResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> UpdateCriminalAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/CreateCriminal", ReplyAction="http://tempuri.org/ICriminalService/CreateCriminalResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse CreateCriminal(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/CreateCriminal", ReplyAction="http://tempuri.org/ICriminalService/CreateCriminalResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> CreateCriminalAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/DeleteCriminal", ReplyAction="http://tempuri.org/ICriminalService/DeleteCriminalResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse DeleteCriminal(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/DeleteCriminal", ReplyAction="http://tempuri.org/ICriminalService/DeleteCriminalResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> DeleteCriminalAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/DeleteCriminals", ReplyAction="http://tempuri.org/ICriminalService/DeleteCriminalsResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse DeleteCriminals(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminalList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/DeleteCriminals", ReplyAction="http://tempuri.org/ICriminalService/DeleteCriminalsResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> DeleteCriminalsAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminalList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/QuickSearchCriminalsByName", ReplyAction="http://tempuri.org/ICriminalService/QuickSearchCriminalsByNameResponse")]
        CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse QuickSearchCriminalsByName(string searchCriteria);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICriminalService/QuickSearchCriminalsByName", ReplyAction="http://tempuri.org/ICriminalService/QuickSearchCriminalsByNameResponse")]
        System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> QuickSearchCriminalsByNameAsync(string searchCriteria);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICriminalServiceChannel : CriminalFinder.WebClient.CriminalFinderService.ICriminalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CriminalServiceClient : System.ServiceModel.ClientBase<CriminalFinder.WebClient.CriminalFinderService.ICriminalService>, CriminalFinder.WebClient.CriminalFinderService.ICriminalService {
        
        public CriminalServiceClient() {
        }
        
        public CriminalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CriminalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CriminalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CriminalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse GetCriminals() {
            return base.Channel.GetCriminals();
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> GetCriminalsAsync() {
            return base.Channel.GetCriminalsAsync();
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse SearchCriminals(CriminalFinder.WebClient.CriminalFinderService.CriminalSearchCriteria searchCriteria) {
            return base.Channel.SearchCriminals(searchCriteria);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> SearchCriminalsAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalSearchCriteria searchCriteria) {
            return base.Channel.SearchCriminalsAsync(searchCriteria);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse GetCriminal(long id) {
            return base.Channel.GetCriminal(id);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> GetCriminalAsync(long id) {
            return base.Channel.GetCriminalAsync(id);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse UpdateCriminal(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal) {
            return base.Channel.UpdateCriminal(criminal);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> UpdateCriminalAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal) {
            return base.Channel.UpdateCriminalAsync(criminal);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse CreateCriminal(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal) {
            return base.Channel.CreateCriminal(criminal);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> CreateCriminalAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo criminal) {
            return base.Channel.CreateCriminalAsync(criminal);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse DeleteCriminal(long id) {
            return base.Channel.DeleteCriminal(id);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> DeleteCriminalAsync(long id) {
            return base.Channel.DeleteCriminalAsync(id);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse DeleteCriminals(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminalList) {
            return base.Channel.DeleteCriminals(criminalList);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> DeleteCriminalsAsync(CriminalFinder.WebClient.CriminalFinderService.CriminalInfo[] criminalList) {
            return base.Channel.DeleteCriminalsAsync(criminalList);
        }
        
        public CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse QuickSearchCriminalsByName(string searchCriteria) {
            return base.Channel.QuickSearchCriminalsByName(searchCriteria);
        }
        
        public System.Threading.Tasks.Task<CriminalFinder.WebClient.CriminalFinderService.CriminalServiceResponse> QuickSearchCriminalsByNameAsync(string searchCriteria) {
            return base.Channel.QuickSearchCriminalsByNameAsync(searchCriteria);
        }
    }
}
